/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, BigNumberish } from 'ethers';
import { Provider, TransactionRequest } from '@ethersproject/providers';
import { Contract, ContractFactory, Overrides } from '@ethersproject/contracts';

import { LinearMintingCurveMinter } from './LinearMintingCurveMinter';

export class LinearMintingCurveMinterFactory extends ContractFactory {
  constructor(signer?: Signer) {
    super(_abi, _bytecode, signer);
  }

  deploy(
    _mintableErc1155: string,
    _treasury: string,
    _tokenType: BigNumberish,
    _startingPrice: BigNumberish,
    _pricePerMint: BigNumberish,
    _maxMintingSupply: BigNumberish,
    overrides?: Overrides,
  ): Promise<LinearMintingCurveMinter> {
    return super.deploy(
      _mintableErc1155,
      _treasury,
      _tokenType,
      _startingPrice,
      _pricePerMint,
      _maxMintingSupply,
      overrides || {},
    ) as Promise<LinearMintingCurveMinter>;
  }
  getDeployTransaction(
    _mintableErc1155: string,
    _treasury: string,
    _tokenType: BigNumberish,
    _startingPrice: BigNumberish,
    _pricePerMint: BigNumberish,
    _maxMintingSupply: BigNumberish,
    overrides?: Overrides,
  ): TransactionRequest {
    return super.getDeployTransaction(
      _mintableErc1155,
      _treasury,
      _tokenType,
      _startingPrice,
      _pricePerMint,
      _maxMintingSupply,
      overrides || {},
    );
  }
  attach(address: string): LinearMintingCurveMinter {
    return super.attach(address) as LinearMintingCurveMinter;
  }
  connect(signer: Signer): LinearMintingCurveMinterFactory {
    return super.connect(signer) as LinearMintingCurveMinterFactory;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider,
  ): LinearMintingCurveMinter {
    return new Contract(
      address,
      _abi,
      signerOrProvider,
    ) as LinearMintingCurveMinter;
  }
}

const _abi = [
  {
    inputs: [
      {
        internalType: 'address',
        name: '_mintableErc1155',
        type: 'address',
      },
      {
        internalType: 'address payable',
        name: '_treasury',
        type: 'address',
      },
      {
        internalType: 'uint256',
        name: '_tokenType',
        type: 'uint256',
      },
      {
        internalType: 'uint256',
        name: '_startingPrice',
        type: 'uint256',
      },
      {
        internalType: 'uint256',
        name: '_pricePerMint',
        type: 'uint256',
      },
      {
        internalType: 'uint256',
        name: '_maxMintingSupply',
        type: 'uint256',
      },
    ],
    stateMutability: 'nonpayable',
    type: 'constructor',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: 'address',
        name: 'previousOwner',
        type: 'address',
      },
      {
        indexed: true,
        internalType: 'address',
        name: 'newOwner',
        type: 'address',
      },
    ],
    name: 'OwnershipTransferred',
    type: 'event',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: '_dst',
        type: 'address',
      },
    ],
    name: 'mint',
    outputs: [],
    stateMutability: 'payable',
    type: 'function',
  },
  {
    inputs: [],
    name: 'mintableErc1155',
    outputs: [
      {
        internalType: 'contract ERC1155Mintable',
        name: '',
        type: 'address',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'owner',
    outputs: [
      {
        internalType: 'address',
        name: '',
        type: 'address',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'renounceOwnership',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address payable',
        name: '_treasury',
        type: 'address',
      },
    ],
    name: 'setTreasury',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [],
    name: 'tokenType',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'newOwner',
        type: 'address',
      },
    ],
    name: 'transferOwnership',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [],
    name: 'treasury',
    outputs: [
      {
        internalType: 'address payable',
        name: '',
        type: 'address',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
];

const _bytecode =
  '';
