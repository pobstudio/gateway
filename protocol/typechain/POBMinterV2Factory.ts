/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, BigNumberish } from 'ethers';
import { Provider, TransactionRequest } from '@ethersproject/providers';
import { Contract, ContractFactory, Overrides } from '@ethersproject/contracts';

import { POBMinterV2 } from './POBMinterV2';

export class POBMinterV2Factory extends ContractFactory {
  constructor(signer?: Signer) {
    super(_abi, _bytecode, signer);
  }

  deploy(
    _pobMinterV1: string,
    _mintableErc1155: string,
    _treasury: string,
    _tokenType: BigNumberish,
    _startingPrice: BigNumberish,
    _pricePerMint: BigNumberish,
    _flatPriceUpTo: BigNumberish,
    overrides?: Overrides,
  ): Promise<POBMinterV2> {
    return super.deploy(
      _pobMinterV1,
      _mintableErc1155,
      _treasury,
      _tokenType,
      _startingPrice,
      _pricePerMint,
      _flatPriceUpTo,
      overrides || {},
    ) as Promise<POBMinterV2>;
  }
  getDeployTransaction(
    _pobMinterV1: string,
    _mintableErc1155: string,
    _treasury: string,
    _tokenType: BigNumberish,
    _startingPrice: BigNumberish,
    _pricePerMint: BigNumberish,
    _flatPriceUpTo: BigNumberish,
    overrides?: Overrides,
  ): TransactionRequest {
    return super.getDeployTransaction(
      _pobMinterV1,
      _mintableErc1155,
      _treasury,
      _tokenType,
      _startingPrice,
      _pricePerMint,
      _flatPriceUpTo,
      overrides || {},
    );
  }
  attach(address: string): POBMinterV2 {
    return super.attach(address) as POBMinterV2;
  }
  connect(signer: Signer): POBMinterV2Factory {
    return super.connect(signer) as POBMinterV2Factory;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider,
  ): POBMinterV2 {
    return new Contract(address, _abi, signerOrProvider) as POBMinterV2;
  }
}

const _abi = [
  {
    inputs: [
      {
        internalType: 'address',
        name: '_pobMinterV1',
        type: 'address',
      },
      {
        internalType: 'address',
        name: '_mintableErc1155',
        type: 'address',
      },
      {
        internalType: 'address payable',
        name: '_treasury',
        type: 'address',
      },
      {
        internalType: 'uint256',
        name: '_tokenType',
        type: 'uint256',
      },
      {
        internalType: 'uint256',
        name: '_startingPrice',
        type: 'uint256',
      },
      {
        internalType: 'uint256',
        name: '_pricePerMint',
        type: 'uint256',
      },
      {
        internalType: 'uint256',
        name: '_flatPriceUpTo',
        type: 'uint256',
      },
    ],
    stateMutability: 'nonpayable',
    type: 'constructor',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: 'address',
        name: 'previousOwner',
        type: 'address',
      },
      {
        indexed: true,
        internalType: 'address',
        name: 'newOwner',
        type: 'address',
      },
    ],
    name: 'OwnershipTransferred',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: 'uint256',
        name: 'tokenId',
        type: 'uint256',
      },
      {
        indexed: false,
        internalType: 'uint256',
        name: 'txHash',
        type: 'uint256',
      },
    ],
    name: 'UpdatedRegistry',
    type: 'event',
  },
  {
    inputs: [],
    name: 'maxIndex',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: '_dst',
        type: 'address',
      },
      {
        internalType: 'uint256',
        name: '_txHash',
        type: 'uint256',
      },
    ],
    name: 'mint',
    outputs: [],
    stateMutability: 'payable',
    type: 'function',
  },
  {
    inputs: [],
    name: 'mintableErc1155',
    outputs: [
      {
        internalType: 'contract ERC1155Mintable',
        name: '',
        type: 'address',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'owner',
    outputs: [
      {
        internalType: 'address',
        name: '',
        type: 'address',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'pobMinterV1',
    outputs: [
      {
        internalType: 'contract POBMinter',
        name: '',
        type: 'address',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: '_maxIndex',
        type: 'uint256',
      },
    ],
    name: 'pricingCurve',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'renounceOwnership',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address payable',
        name: '_treasury',
        type: 'address',
      },
    ],
    name: 'setTreasury',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    name: 'tokenIdToTxHash',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'tokenType',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'newOwner',
        type: 'address',
      },
    ],
    name: 'transferOwnership',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [],
    name: 'treasury',
    outputs: [
      {
        internalType: 'address payable',
        name: '',
        type: 'address',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    name: 'txHashToTokenId',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
];

const _bytecode =
  '';
