/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer } from 'ethers';
import { Provider, TransactionRequest } from '@ethersproject/providers';
import { Contract, ContractFactory, Overrides } from '@ethersproject/contracts';

import { MixinNonFungibleToken } from './MixinNonFungibleToken';

export class MixinNonFungibleTokenFactory extends ContractFactory {
  constructor(signer?: Signer) {
    super(_abi, _bytecode, signer);
  }

  deploy(overrides?: Overrides): Promise<MixinNonFungibleToken> {
    return super.deploy(overrides || {}) as Promise<MixinNonFungibleToken>;
  }
  getDeployTransaction(overrides?: Overrides): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): MixinNonFungibleToken {
    return super.attach(address) as MixinNonFungibleToken;
  }
  connect(signer: Signer): MixinNonFungibleTokenFactory {
    return super.connect(signer) as MixinNonFungibleTokenFactory;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider,
  ): MixinNonFungibleToken {
    return new Contract(
      address,
      _abi,
      signerOrProvider,
    ) as MixinNonFungibleToken;
  }
}

const _abi = [
  {
    inputs: [
      {
        internalType: 'uint256',
        name: 'id',
        type: 'uint256',
      },
    ],
    name: 'getNonFungibleBaseType',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'pure',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: 'id',
        type: 'uint256',
      },
    ],
    name: 'getNonFungibleIndex',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'pure',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: 'id',
        type: 'uint256',
      },
    ],
    name: 'isFungible',
    outputs: [
      {
        internalType: 'bool',
        name: '',
        type: 'bool',
      },
    ],
    stateMutability: 'pure',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: 'id',
        type: 'uint256',
      },
    ],
    name: 'isNonFungible',
    outputs: [
      {
        internalType: 'bool',
        name: '',
        type: 'bool',
      },
    ],
    stateMutability: 'pure',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: 'id',
        type: 'uint256',
      },
    ],
    name: 'isNonFungibleBaseType',
    outputs: [
      {
        internalType: 'bool',
        name: '',
        type: 'bool',
      },
    ],
    stateMutability: 'pure',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: 'id',
        type: 'uint256',
      },
    ],
    name: 'isNonFungibleItem',
    outputs: [
      {
        internalType: 'bool',
        name: '',
        type: 'bool',
      },
    ],
    stateMutability: 'pure',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: 'id',
        type: 'uint256',
      },
    ],
    name: 'ownerOf',
    outputs: [
      {
        internalType: 'address',
        name: '',
        type: 'address',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
];

const _bytecode =
  '0x608060405234801561001057600080fd5b50610499806100206000396000f3fe608060405234801561001057600080fd5b506004361061007d5760003560e01c80637269a3271161005b5780637269a327146101605780639cca1c64146101a4578063adebf6f2146101e6578063e44591f01461022a5761007d565b80635e81b958146100825780636352211e146100c65780636f969c2d1461011e575b600080fd5b6100ae6004803603602081101561009857600080fd5b810190808035906020019092919050505061026e565b60405180821515815260200191505060405180910390f35b6100f2600480360360208110156100dc57600080fd5b81019080803590602001909291905050506102dd565b604051808273ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b61014a6004803603602081101561013457600080fd5b8101908080359060200190929190505050610319565b6040518082815260200191505060405180910390f35b61018c6004803603602081101561017657600080fd5b810190808035906020019092919050505061035b565b60405180821515815260200191505060405180910390f35b6101d0600480360360208110156101ba57600080fd5b81019080803590602001909291905050506103c9565b6040518082815260200191505060405180910390f35b610212600480360360208110156101fc57600080fd5b8101908080359060200190929190505050610407565b60405180821515815260200191505060405180910390f35b6102566004803603602081101561024057600080fd5b8101908080359060200190929190505050610435565b60405180821515815260200191505060405180910390f35b60007f80000000000000000000000000000000000000000000000000000000000000008083161480156102d6575060007fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff6fffffffffffffffffffffffffffffffff16831614155b9050919050565b600080600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b600060807fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff6fffffffffffffffffffffffffffffffff16901b82169050919050565b60007f80000000000000000000000000000000000000000000000000000000000000008083161480156103c2575060007fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff6fffffffffffffffffffffffffffffffff168316145b9050919050565b60007fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff6fffffffffffffffffffffffffffffffff1682169050919050565b6000807f80000000000000000000000000000000000000000000000000000000000000008316149050919050565b60007f800000000000000000000000000000000000000000000000000000000000000080831614905091905056fea2646970667358221220efe6b2c1f0a2b0633e5d1a833f8b4eeceaf3b0d7ebea222368ae8099fbe7447f64736f6c63430007030033';
